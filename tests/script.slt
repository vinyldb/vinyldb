# For `EXPLAIN`

query T
EXPLAIN CREATE TABLE foo;
----
CreateTableExec

# TODO: pass this test
#
# query T
# EXPLAIN DESCRIBE foo;
# ----
# DescribeTableExec

query
CREATE TABLE students (name STRING, age INT64);
----

query T
EXPLAIN INSERT INTO students VALUES ('steve', 1);
----
InsertExec

query T
EXPLAIN SHOW TABLES;
----
ShowTablesExec

query T
EXPLAIN SELECT * FROM students;
----
TableScanExec

query T
EXPLAIN SELECT * FROM students WHERE name = 'steve';
----
FilterExec
TableScanExec


query T
SHOW TABLES;
----
students

query
CREATE TABLE take (name STRING, score FLOAT64);
----

query
CREATE TABLE take (name STRING, score FLOAT64);
----
Table with name 'take' already exists

query T
SHOW TABLES;
----
students
take

query T
DESCRIBE students;
----
name STRING YES YES
age INT64 YES NO

query T
DESCRIBE a_table_that_does_not_exist;
----
Table with name 'a_table_that_does_not_exist' does not exist

query
INSERT INTO students VALUES ('steve', 1);
----

query T
INSERT INTO a_table_that_does_not_exist VALUES ('steve', 1);
----
Table with name 'a_table_that_does_not_exist' does not exist

query T
INSERT INTO students VALUES (1);
----
table students has 2 columns but 1 columns were supplied

query T
INSERT INTO students VALUES (1, 1);
----
the data type of 0th column of table students should be STRING but found INT64

query TI
select * from students;
----
steve 1

query T
select * from a_table_that_does_not_exist;
----
Table with name 'a_table_that_does_not_exist' does not exist

query
INSERT INTO students VALUES ('mike', 2);
----

query TI
SELECT * FROM students;
----
mike 2
steve 1

query TI
SELECT * FROM students WHERE name = 'steve';
----
steve 1

query TI
SELECT * FROM students WHERE age > 1;
----
mike 2

query
SELECT * FROM students WHERE age < 1 AND name = 'steve';
----

query TI
SELECT * FROM students WHERE name = 'steve' OR age = 2;
----
mike 2
steve 1

query
create table ids (id int64);
----

query
insert into ids values (1);
----

query
insert into ids values (2);
----

query
insert into ids values (3);
----

query I
select * from ids;
----
1
2
3

query I
select * from ids limit 1;
----
1

query I
select * from ids limit 2;
----
1
2

query I
select * from ids limit 3;
----
1
2
3

query I
select * from ids limit 4;
----
1
2
3

query
create table proj (a string, b int64, c bool);
----

query
insert into proj values ('1', 1, true);
----

query
insert into proj values ('2', 2, false);
----

query
insert into proj values ('3', 3, true);
----

query T
explain select * from proj;
----
TableScanExec

query T
explain select a from proj;
----
ProjectionExec
TableScanExec

query T
explain select a from proj where c = true;
----
ProjectionExec
FilterExec
TableScanExec

query T
select c from proj;
----
true
false
true

query TI
select a, b from proj;
----
1 1
2 2
3 3

query I
select b from proj;
----
1
2
3

query TIB
select a, b, c from proj;
----
1 1 true
2 2 false
3 3 true

# TODO: this should not generate a ProjectionExec
query T
explain select a, b, c from proj;
----
ProjectionExec
TableScanExec

query T
explain select c from proj where b = 1 limit 1;
----
ProjectionExec
LimitExec
FilterExec
TableScanExec

query B
select c from proj where b = 2 limit 2;
----
false
